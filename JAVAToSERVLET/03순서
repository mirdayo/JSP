//--------------------------------------------------------------
//Filter를 이용한  UTF-8  / 알림 아이콘 설정
//--------------------------------------------------------------

//-------------------------------
//[Controller]FrontController
//-------------------------------
- Service 함수내의 utf-8 설정코드 삭제

//-------------------------------
//[Filter] UTF_8_Filter
//-------------------------------
- implements Filter
- doFilter 함수 완성하기 

//-------------------------------
//[Web.xml]
//-------------------------------
- 필터 등록


//-------------------------------
///WEB-INF/view/member/user.jsp 알림아이콘만들기
//-------------------------------
//- google Meterial icon 받기
//- 기본 스타일 지정하기

//-------------------------------
//[Table] tbl_lend_message
//-------------------------------
//msgId(PK) userid,msg
CREATE TABLE `bookdb`.`tbl_lend_message` (
  `msgId` INT NOT NULL AUTO_INCREMENT,
  `userId` VARCHAR(45) NULL,
  `msg` TEXT NULL,
  PRIMARY KEY (`msgId`));
 
 //-------------------------------
 //[Dto] LendMessageDto
 //-------------------------------
-	private int msgId;
-	private String userId;
-	private String msg;
-	toString 재정의
-	getter and Setter
-	기본생성자
-	모든 인자 생성자
	
 //-------------------------------
 //[Dao] LendMessageDaoImpl
 //-------------------------------
 - 코드 확인해보기

 //-------------------------------
 //[Dao] LendMessageDao Interface
 //-------------------------------
 - 코드 확인해보기
 
 //-------------------------------
 //[Service] LendServiceImpl 
 //-------------------------------
 - LendMessageDao 를 등록
 --	private LendMessageDao msgDao;
 -- LendServiceImpl(){}내부코드 확인
 
 - reqLend()함수의 메시지저장코드 추가
 
 //-------------------------------
 //[ConnectionPool] ConnectionPool Conn 공유설정 
 //-------------------------------
- public static Connection conn;
 
 //-------------------------------
 //[Service] LendServiceImpl 
 //-------------------------------
 - ConnectionPool.conn.setAutoCommit(false);
 - ConnectionPool.conn.commit();
 
 //-------------------------------
 //[Controller] LendAddController 
 //-------------------------------
 - Catch부분에 다음코드 추가
 	ConnectionPool.conn.rollback();
 
 //-------------------------------
 //	[Filter] UserLendMessageFilter 
 //-------------------------------
 // 코드 확인하기
 
 //-------------------------------
 //	[web.xml] UserLendMessageFilter등록 
 //-------------------------------
 // 코드 확인하기
 
 //-------------------------------
 //	[View] /WEB-INF/view/member/user.jsp
 //-------------------------------
 // Session에 저장된 alarm_cnt,alarm_list로
 // 알림메시지 처리하기
 
 // 메시지를 확인하고 나면 tbl_lend_message에
 // 내용삭제 비동기요청 처리하기
 
 //-------------------------------
 //	[Controller] FrontController
 //-------------------------------
 - /lend/messageRemove.do 등록하기

//-------------------------------
//	[Controller] LendMessageRemoveController
//-------------------------------
- 코드 확인
//-------------------------------
//[service] Controller Interface
//-------------------------------
- void removeMessage(HttpServletRequest req);



//-----------------------------------------------------
//Listener 로 접속현황 파악하기(with Chart.js)
//--------------------------------------------------------------
//-------------------------------
// Session 생성에 따른 속성 추가 / 변경
//-------------------------------
// 총 접속량(비회원 + 로그인회원)
// 유저 총 접속량(ROLE_USER만 Conunt)
// 사서 총 접속량(ROLE_MEMBER만 Count)

// 



//-------------------------------
// Session 접속시 리스너 
//-------------------------------





//--------------------------------------------------------------
//Paging 처리위한 코드 추가
//--------------------------------------------------------------
//-------------------------------
//
//-------------------------------


//--------------------------------------------------------------
//비동기요청 종류
//--------------------------------------------------------------

// 외부 API
// Daum주소검색API
// 카카오맵 / 카카오로그인 / 카카오메시지
// 네이버검색 / 네이버메일 / 네이버플랫폼 SMS전달 / 네이버로그인
// Google Oauth / 구글메일
// etc..

